{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sanje\\\\OneDrive\\\\Desktop\\\\to-do-list-main\\\\src\\\\components\\\\TodoItem.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoItem(_ref) {\n  _s();\n  let {\n    task\n  } = _ref;\n  const [editClass, setEditClass] = useState(\"fa-solid fa-pen-to-square\");\n  const [isCompleted, setIsCompleted] = useState(task.completed);\n  const textStyle = {\n    textDecoration: isCompleted ? \"line-through 2px hsl(199deg 31% 14%)\" : \"none\"\n  };\n  const editTask = e => {\n    let taskInDOM = e.target.parentElement.parentElement.children[0];\n    if (editClass === \"fa-solid fa-pen-to-square\") {\n      // Deleting the task and adding a input field in place of it and giving its value as the task earlier so that it can be edited\n      let textToBeEdited = taskInDOM.children[1].innerText;\n      // console.log(textToBeEdited);\n      const node = document.createElement(\"input\");\n      node.setAttribute(\"type\", \"text\");\n      node.setAttribute(\"value\", textToBeEdited);\n      // console.log(node);\n      taskInDOM.appendChild(node);\n      taskInDOM.children[1].remove();\n      setEditClass(\"fa-solid fa-check\");\n    } else {\n      let newTaskAfterEdit = taskInDOM.children[1].value;\n      console.log(newTaskAfterEdit);\n      const node = document.createElement(\"div\");\n      node.setAttribute(\"style\", textStyle);\n      node.innerText = newTaskAfterEdit;\n      taskInDOM.appendChild(node);\n      taskInDOM.children[1].remove();\n      setEditClass(\"fa-solid fa-pen-to-square\");\n    }\n  };\n  const deleteTask = e => {\n    let taskInDOM = e.target.parentElement.parentElement.children[0];\n    taskInDOM.parentElement.remove();\n  };\n  const completeTask = e => {\n    if (isCompleted === true) {\n      console.log(e.target.parentElement);\n      setIsCompleted(false);\n    } else {\n      setIsCompleted(true);\n    }\n  };\n  const completedStyle = {\n    color: isCompleted ? \"green\" : \"#2c2c2c\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-item\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"icon-tasks\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa-solid fa-circle-check\",\n        onClick: completeTask,\n        style: completedStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-name\",\n        style: textStyle,\n        children: task.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"icons\",\n      children: [isCompleted ? /*#__PURE__*/_jsxDEV(\"i\", {\n        className: editClass,\n        onClick: () => alert(\"Completed Task can't be edited\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 20\n      }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n        className: editClass,\n        onClick: editTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 108\n      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa-solid fa-trash\",\n        onClick: deleteTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 3\n  }, this);\n}\n_s(TodoItem, \"gn8KGwRYbtEUm4zTxEpUDkrTM4A=\");\n_c = TodoItem;\nexport default TodoItem;\nvar _c;\n$RefreshReg$(_c, \"TodoItem\");","map":{"version":3,"names":["React","useState","TodoItem","task","editClass","setEditClass","isCompleted","setIsCompleted","completed","textStyle","textDecoration","editTask","e","taskInDOM","target","parentElement","children","textToBeEdited","innerText","node","document","createElement","setAttribute","appendChild","remove","newTaskAfterEdit","value","console","log","deleteTask","completeTask","completedStyle","color","title","alert"],"sources":["C:/Users/sanje/OneDrive/Desktop/to-do-list-main/src/components/TodoItem.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction TodoItem({ task }) {\n\tconst [editClass, setEditClass] = useState(\"fa-solid fa-pen-to-square\");\n\tconst [isCompleted, setIsCompleted] = useState(task.completed);\n\n\tconst textStyle = {\n\t\ttextDecoration: isCompleted ? \"line-through 2px hsl(199deg 31% 14%)\" : \"none\",\n\t};\n\n\tconst editTask = (e) => {\n\t\tlet taskInDOM = e.target.parentElement.parentElement.children[0];\n\t\tif (editClass === \"fa-solid fa-pen-to-square\") {\n\t\t\t// Deleting the task and adding a input field in place of it and giving its value as the task earlier so that it can be edited\n\t\t\tlet textToBeEdited = taskInDOM.children[1].innerText;\n\t\t\t// console.log(textToBeEdited);\n\t\t\tconst node = document.createElement(\"input\");\n\t\t\tnode.setAttribute(\"type\", \"text\");\n\t\t\tnode.setAttribute(\"value\", textToBeEdited);\n\t\t\t// console.log(node);\n\t\t\ttaskInDOM.appendChild(node);\n\t\t\ttaskInDOM.children[1].remove();\n\t\t\tsetEditClass(\"fa-solid fa-check\");\n\t\t} else {\n\t\t\tlet newTaskAfterEdit = taskInDOM.children[1].value;\n\t\t\tconsole.log(newTaskAfterEdit);\n\t\t\tconst node = document.createElement(\"div\");\n\t\t\tnode.setAttribute(\"style\", textStyle);\n\t\t\tnode.innerText = newTaskAfterEdit;\n\t\t\ttaskInDOM.appendChild(node);\n\t\t\ttaskInDOM.children[1].remove();\n\t\t\tsetEditClass(\"fa-solid fa-pen-to-square\");\n\t\t}\n\t};\n\n\tconst deleteTask = (e) => {\n\t\tlet taskInDOM = e.target.parentElement.parentElement.children[0];\n\t\ttaskInDOM.parentElement.remove();\n\t};\n\n\tconst completeTask = (e) => {\n\t\tif (isCompleted === true) {\n\t\t\tconsole.log(e.target.parentElement);\n\t\t\tsetIsCompleted(false);\n\t\t} else {\n\t\t\tsetIsCompleted(true);\n\t\t}\n\t};\n\n\tconst completedStyle = {\n\t\tcolor: isCompleted ? \"green\" : \"#2c2c2c\",\n\t};\n\n\treturn (\n\t\t<div className=\"todo-item\">\n\t\t\t<div className=\"icon-tasks\">\n\t\t\t\t<i className=\"fa-solid fa-circle-check\" onClick={completeTask} style={completedStyle}></i>\n\t\t\t\t<div className=\"task-name\" style={textStyle}>{task.title}</div>\n\t\t\t</div>\n\t\t\t<div className=\"icons\">\n\t\t\t\t{isCompleted ? <i className={editClass} onClick={() => alert(\"Completed Task can't be edited\")}></i> : <i className={editClass} onClick={editTask}></i>}\n\t\t\t\t<i className=\"fa-solid fa-trash\" onClick={deleteTask}></i>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default TodoItem;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}